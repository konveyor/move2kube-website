(()=>{"use strict";class e{static read_bytes(t,r){const n=new e;return n.buf=t.getUint32(r,!0),n.buf_len=t.getUint32(r+4,!0),n}static read_bytes_array(t,r,n){const s=[];for(let o=0;o<n;o++)s.push(e.read_bytes(t,r+8*o));return s}}class t{static read_bytes(e,r){const n=new t;return n.buf=e.getUint32(r,!0),n.buf_len=e.getUint32(r+4,!0),n}static read_bytes_array(e,r,n){const s=[];for(let o=0;o<n;o++)s.push(t.read_bytes(e,r+8*o));return s}}class r{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(e,t){e.setBigUint64(t,this.d_next,!0),e.setBigUint64(t+8,this.d_ino,!0),e.setUint32(t+16,this.dir_name.length,!0),e.setUint8(t+20,this.d_type)}write_name_bytes(e,t,r){e.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,r)),t)}constructor(e,t,r){this.d_ino=1n;const n=(new TextEncoder).encode(t);this.d_next=e,this.d_namlen=n.byteLength,this.d_type=r,this.dir_name=n}}class n{write_bytes(e,t){e.setUint8(t,this.fs_filetype),e.setUint16(t+2,this.fs_flags,!0),e.setBigUint64(t+8,this.fs_rights_base,!0),e.setBigUint64(t+16,this.fs_rights_inherited,!0)}constructor(e,t){this.fs_rights_base=0n,this.fs_rights_inherited=0n,this.fs_filetype=e,this.fs_flags=t}}class s{write_bytes(e,t){e.setBigUint64(t,this.dev,!0),e.setBigUint64(t+8,this.ino,!0),e.setUint8(t+16,this.filetype),e.setBigUint64(t+24,this.nlink,!0),e.setBigUint64(t+32,this.size,!0),e.setBigUint64(t+38,this.atim,!0),e.setBigUint64(t+46,this.mtim,!0),e.setBigUint64(t+52,this.ctim,!0)}constructor(e,t){this.dev=0n,this.ino=0n,this.nlink=0n,this.atim=0n,this.mtim=0n,this.ctim=0n,this.filetype=e,this.size=t}}class o{write_bytes(e,t){e.setUint32(t,this.pr_name_len,!0)}constructor(e){this.pr_name_len=e}}class i{static dir(e){const t=new i;return t.tag=0,t.inner=new o(e),t}write_bytes(e,t){e.setUint32(t,this.tag,!0),this.inner.write_bytes(e,t+4)}}const a=new class{enable(e){this.log=function(e,t){return e?console.log.bind(console,"%c%s","color: #265BA0",t):()=>{}}(void 0===e||e,this.prefix)}get enabled(){return this.isEnabled}constructor(e){this.isEnabled=e,this.prefix="wasi:",this.enable(e)}}(!1);let l=class{start(e){this.inst=e,e.exports._start()}initialize(e){this.inst=e,e.exports._initialize()}constructor(r,n,s,o={}){this.args=[],this.env=[],this.fds=[],a.enable(o.debug),this.args=r,this.env=n,this.fds=s;const i=this;this.wasiImport={args_sizes_get(e,t){const r=new DataView(i.inst.exports.memory.buffer);r.setUint32(e,i.args.length,!0);let n=0;for(const e of i.args)n+=e.length+1;return r.setUint32(t,n,!0),a.log(r.getUint32(e,!0),r.getUint32(t,!0)),0},args_get(e,t){const r=new DataView(i.inst.exports.memory.buffer),n=new Uint8Array(i.inst.exports.memory.buffer),s=t;for(let s=0;s<i.args.length;s++){r.setUint32(e,t,!0),e+=4;const o=(new TextEncoder).encode(i.args[s]);n.set(o,t),r.setUint8(t+o.length,0),t+=o.length+1}return a.enabled&&a.log(new TextDecoder("utf-8").decode(n.slice(s,t))),0},environ_sizes_get(e,t){const r=new DataView(i.inst.exports.memory.buffer);r.setUint32(e,i.env.length,!0);let n=0;for(const e of i.env)n+=e.length+1;return r.setUint32(t,n,!0),a.log(r.getUint32(e,!0),r.getUint32(t,!0)),0},environ_get(e,t){const r=new DataView(i.inst.exports.memory.buffer),n=new Uint8Array(i.inst.exports.memory.buffer),s=t;for(let s=0;s<i.env.length;s++){r.setUint32(e,t,!0),e+=4;const o=(new TextEncoder).encode(i.env[s]);n.set(o,t),r.setUint8(t+o.length,0),t+=o.length+1}return a.enabled&&a.log(new TextDecoder("utf-8").decode(n.slice(s,t))),0},clock_res_get(e,t){throw"unimplemented"},clock_time_get(e,t,r){const n=new DataView(i.inst.exports.memory.buffer);if(0===e)n.setBigUint64(r,1000000n*BigInt((new Date).getTime()),!0);else if(1==e){let e;try{e=BigInt(Math.round(1e6*performance.now()))}catch(t){e=0n}n.setBigUint64(r,e,!0)}else n.setBigUint64(r,0n,!0);return 0},fd_advise:(e,t,r,n)=>null!=i.fds[e]?i.fds[e].fd_advise(t,r,n):8,fd_allocate:(e,t,r)=>null!=i.fds[e]?i.fds[e].fd_allocate(t,r):8,fd_close(e){if(null!=i.fds[e]){const t=i.fds[e].fd_close();return i.fds[e]=void 0,t}return 8},fd_datasync:e=>null!=i.fds[e]?i.fds[e].fd_datasync():8,fd_fdstat_get(e,t){if(null!=i.fds[e]){const{ret:r,fdstat:n}=i.fds[e].fd_fdstat_get();return null!=n&&n.write_bytes(new DataView(i.inst.exports.memory.buffer),t),r}return 8},fd_fdstat_set_flags:(e,t)=>null!=i.fds[e]?i.fds[e].fd_fdstat_set_flags(t):8,fd_fdstat_set_rights:(e,t,r)=>null!=i.fds[e]?i.fds[e].fd_fdstat_set_rights(t,r):8,fd_filestat_get(e,t){if(null!=i.fds[e]){const{ret:r,filestat:n}=i.fds[e].fd_filestat_get();return null!=n&&n.write_bytes(new DataView(i.inst.exports.memory.buffer),t),r}return 8},fd_filestat_set_size:(e,t)=>null!=i.fds[e]?i.fds[e].fd_filestat_set_size(t):8,fd_filestat_set_times:(e,t,r,n)=>null!=i.fds[e]?i.fds[e].fd_filestat_set_times(t,r,n):8,fd_pread(t,r,n,s,o){const a=new DataView(i.inst.exports.memory.buffer),l=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[t]){const f=e.read_bytes_array(a,r,n),{ret:d,nread:c}=i.fds[t].fd_pread(l,f,s);return a.setUint32(o,c,!0),d}return 8},fd_prestat_get(e,t){const r=new DataView(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const{ret:n,prestat:s}=i.fds[e].fd_prestat_get();return null!=s&&s.write_bytes(r,t),n}return 8},fd_prestat_dir_name(e,t,r){if(null!=i.fds[e]){const{ret:r,prestat_dir_name:n}=i.fds[e].fd_prestat_dir_name();return null!=n&&new Uint8Array(i.inst.exports.memory.buffer).set(n,t),r}return 8},fd_pwrite(e,r,n,s,o){const a=new DataView(i.inst.exports.memory.buffer),l=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const f=t.read_bytes_array(a,r,n),{ret:d,nwritten:c}=i.fds[e].fd_pwrite(l,f,s);return a.setUint32(o,c,!0),d}return 8},fd_read(t,r,n,s){const o=new DataView(i.inst.exports.memory.buffer),a=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[t]){const l=e.read_bytes_array(o,r,n),{ret:f,nread:d}=i.fds[t].fd_read(a,l);return o.setUint32(s,d,!0),f}return 8},fd_readdir(e,t,r,n,s){const o=new DataView(i.inst.exports.memory.buffer),a=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){let l=0;for(;;){const{ret:f,dirent:d}=i.fds[e].fd_readdir_single(n);if(0!=f)return o.setUint32(s,l,!0),f;if(null==d)break;if(r-l<d.head_length()){l=r;break}const c=new ArrayBuffer(d.head_length());if(d.write_head_bytes(new DataView(c),0),a.set(new Uint8Array(c).slice(0,Math.min(c.byteLength,r-l)),t),t+=d.head_length(),l+=d.head_length(),r-l<d.name_length()){l=r;break}d.write_name_bytes(a,t,r-l),t+=d.name_length(),l+=d.name_length(),n=d.d_next}return o.setUint32(s,l,!0),0}return 8},fd_renumber(e,t){if(null!=i.fds[e]&&null!=i.fds[t]){const r=i.fds[t].fd_close();return 0!=r?r:(i.fds[t]=i.fds[e],i.fds[e]=void 0,0)}return 8},fd_seek(e,t,r,n){const s=new DataView(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const{ret:o,offset:a}=i.fds[e].fd_seek(t,r);return s.setBigInt64(n,a,!0),o}return 8},fd_sync:e=>null!=i.fds[e]?i.fds[e].fd_sync():8,fd_tell(e,t){const r=new DataView(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const{ret:n,offset:s}=i.fds[e].fd_tell();return r.setBigUint64(t,s,!0),n}return 8},fd_write(e,r,n,s){const o=new DataView(i.inst.exports.memory.buffer),a=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const l=t.read_bytes_array(o,r,n),{ret:f,nwritten:d}=i.fds[e].fd_write(a,l);return o.setUint32(s,d,!0),f}return 8},path_create_directory(e,t,r){const n=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const s=new TextDecoder("utf-8").decode(n.slice(t,t+r));return i.fds[e].path_create_directory(s)}},path_filestat_get(e,t,r,n,s){const o=new DataView(i.inst.exports.memory.buffer),a=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const l=new TextDecoder("utf-8").decode(a.slice(r,r+n)),{ret:f,filestat:d}=i.fds[e].path_filestat_get(t,l);return null!=d&&d.write_bytes(o,s),f}return 8},path_filestat_set_times(e,t,r,n,s,o,a){const l=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const f=new TextDecoder("utf-8").decode(l.slice(r,r+n));return i.fds[e].path_filestat_set_times(t,f,s,o,a)}return 8},path_link(e,t,r,n,s,o,a){const l=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]&&null!=i.fds[s]){const f=new TextDecoder("utf-8").decode(l.slice(r,r+n)),d=new TextDecoder("utf-8").decode(l.slice(o,o+a));return i.fds[s].path_link(e,t,f,d)}return 8},path_open(e,t,r,n,s,o,l,f,d){const c=new DataView(i.inst.exports.memory.buffer),u=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const _=new TextDecoder("utf-8").decode(u.slice(r,r+n));a.log(_);const{ret:h,fd_obj:m}=i.fds[e].path_open(t,_,s,o,l,f);if(0!=h)return h;i.fds.push(m);const p=i.fds.length-1;return c.setUint32(d,p,!0),0}return 8},path_readlink(e,t,r,n,s,o){const l=new DataView(i.inst.exports.memory.buffer),f=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const d=new TextDecoder("utf-8").decode(f.slice(t,t+r));a.log(d);const{ret:c,data:u}=i.fds[e].path_readlink(d);if(null!=u){if(u.length>s)return l.setUint32(o,0,!0),8;f.set(u,n),l.setUint32(o,u.length,!0)}return c}return 8},path_remove_directory(e,t,r){const n=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const s=new TextDecoder("utf-8").decode(n.slice(t,t+r));return i.fds[e].path_remove_directory(s)}return 8},path_rename(e,t,r,n,s,o){throw"FIXME what is the best abstraction for this?"},path_symlink(e,t,r,n,s){const o=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[r]){const a=new TextDecoder("utf-8").decode(o.slice(e,e+t)),l=new TextDecoder("utf-8").decode(o.slice(n,n+s));return i.fds[r].path_symlink(a,l)}return 8},path_unlink_file(e,t,r){const n=new Uint8Array(i.inst.exports.memory.buffer);if(null!=i.fds[e]){const s=new TextDecoder("utf-8").decode(n.slice(t,t+r));return i.fds[e].path_unlink_file(s)}return 8},poll_oneoff(e,t,r){throw"async io not supported"},proc_exit(e){throw"exit with exit code "+e},proc_raise(e){throw"raised signal "+e},sched_yield(){},random_get(e,t){const r=new Uint8Array(i.inst.exports.memory.buffer);for(let n=0;n<t;n++)r[e+n]=256*Math.random()|0},sock_recv(e,t,r){throw"sockets not supported"},sock_send(e,t,r){throw"sockets not supported"},sock_shutdown(e,t){throw"sockets not supported"},sock_accept(e,t){throw"sockets not supported"}}}};class f{fd_advise(e,t,r){return-1}fd_allocate(e,t){return-1}fd_close(){return 0}fd_datasync(){return-1}fd_fdstat_get(){return{ret:-1,fdstat:null}}fd_fdstat_set_flags(e){return-1}fd_fdstat_set_rights(e,t){return-1}fd_filestat_get(){return{ret:-1,filestat:null}}fd_filestat_set_size(e){return-1}fd_filestat_set_times(e,t,r){return-1}fd_pread(e,t,r){return{ret:-1,nread:0}}fd_prestat_get(){return{ret:-1,prestat:null}}fd_prestat_dir_name(){return{ret:-1,prestat_dir_name:null}}fd_pwrite(e,t,r){return{ret:-1,nwritten:0}}fd_read(e,t){return{ret:-1,nread:0}}fd_readdir_single(e){return{ret:-1,dirent:null}}fd_seek(e,t){return{ret:-1,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:-1,offset:0n}}fd_write(e,t){return{ret:-1,nwritten:0}}path_create_directory(e){return-1}path_filestat_get(e,t){return{ret:-1,filestat:null}}path_filestat_set_times(e,t,r,n,s){return-1}path_link(e,t,r,n){return-1}path_open(e,t,r,n,s,o){return{ret:-1,fd_obj:null}}path_readlink(e){return{ret:-1,data:null}}path_remove_directory(e){return-1}path_rename(e,t,r){return-1}path_symlink(e,t){return-1}path_unlink_file(e){return-1}}class d extends f{fd_fdstat_get(){return{ret:0,fdstat:new n(4,0)}}fd_read(e,t){let r=0;for(const n of t){if(!(this.file_pos<this.file.data.byteLength))break;{const t=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(n.buf_len)));e.set(t,n.buf),this.file_pos+=BigInt(t.length),r+=t.length}}return{ret:0,nread:r}}fd_pread(e,t,r){let n=0;for(const s of t){if(!(r<this.file.data.byteLength))break;{const t=this.file.data.slice(Number(r),Number(r+BigInt(s.buf_len)));e.set(t,s.buf),r+=BigInt(t.length),n+=t.length}}return{ret:0,nread:n}}fd_seek(e,t){let r;switch(t){case 0:r=e;break;case 1:r=this.file_pos+e;break;case 2:r=BigInt(this.file.data.byteLength)+e;break;default:return{ret:28,offset:0n}}return r<0?{ret:28,offset:0n}:(this.file_pos=r,{ret:0,offset:this.file_pos})}fd_write(e,t){let r=0;if(this.file.readonly)return{ret:8,nwritten:r};for(const n of t){const t=e.slice(n.buf,n.buf+n.buf_len);if(this.file_pos+BigInt(t.byteLength)>this.file.size){const e=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(t.byteLength))),this.file.data.set(e)}this.file.data.set(t.slice(0,Number(this.file.size-this.file_pos)),Number(this.file_pos)),this.file_pos+=BigInt(t.byteLength),r+=n.buf_len}return{ret:0,nwritten:r}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(e){super(),this.file_pos=0n,this.file=e}}class c extends f{fd_fdstat_get(){return{ret:0,fdstat:new n(3,0)}}fd_readdir_single(e){if(a.enabled&&(a.log("readdir_single",e),a.log(e,Object.keys(this.dir.contents))),a.log(e,Object.keys(this.dir.contents).slice(Number(e))),e>=BigInt(Object.keys(this.dir.contents).length))return{ret:0,dirent:null};const t=Object.keys(this.dir.contents)[Number(e)],n=this.dir.contents[t];return{ret:0,dirent:new r(e+1n,t,n.stat().filetype)}}path_filestat_get(e,t){const r=this.dir.get_entry_for_path(t);return null==r?{ret:44,filestat:null}:{ret:0,filestat:r.stat()}}path_open(e,t,r,n,s,o){let i=this.dir.get_entry_for_path(t);if(null==i){if(1!=(1&r))return{ret:44,fd_obj:null};i=this.dir.create_entry_for_path(t,2==(2&r))}else if(4==(4&r))return{ret:20,fd_obj:null};if(2==(2&r)&&3!==i.stat().filetype)return{ret:54,fd_obj:null};if(i.readonly&&(n&BigInt(64))==BigInt(64))return{ret:63,fd_obj:null};if(!(i instanceof h)&&8==(8&r)){const e=i.truncate();if(0!=e)return{ret:e,fd_obj:null}}return{ret:0,fd_obj:i.open(o)}}path_create_directory(e){return this.path_open(0,e,3,0n,0n,0).ret}path_unlink_file(e){e=this.clean_path(e);const t=this.dir.get_parent_dir_for_path(e),r=e.split("/"),n=r[r.length-1],s=this.dir.get_entry_for_path(e);return null===s?44:3===s.stat().filetype?31:(delete t.contents[n],0)}path_remove_directory(e){e=this.clean_path(e);const t=this.dir.get_parent_dir_for_path(e),r=e.split("/"),n=r[r.length-1],s=this.dir.get_entry_for_path(e);return null===s?44:s instanceof h&&3===s.stat().filetype?0!==Object.keys(s.contents).length?55:void 0===t.contents[n]?44:(delete t.contents[n],0):54}clean_path(e){for(;e.length>0&&"/"===e[e.length-1];)e=e.slice(0,e.length-1);return e}constructor(e){super(),this.dir=e}}class u extends c{fd_prestat_get(){return{ret:0,prestat:i.dir(this.prestat_name.length)}}fd_prestat_dir_name(){return{ret:0,prestat_dir_name:this.prestat_name}}constructor(e,t){super(new h(t)),this.prestat_name=(new TextEncoder).encode(e)}}class _{open(e){const t=new d(this);return 1&e&&t.fd_seek(0n,2),t}get size(){return BigInt(this.data.byteLength)}stat(){return new s(4,this.size)}truncate(){return this.readonly?63:(this.data=new Uint8Array([]),0)}constructor(e,t){this.data=new Uint8Array(e),this.readonly=!!t?.readonly}}class h{open(e){return new c(this)}stat(){return new s(3,0n)}get_entry_for_path(e){let t=this;for(const r of e.split("/")){if(""==r)break;if("."!=r){if(!(t instanceof h))return null;if(null==t.contents[r])return a.log(r),null;t=t.contents[r]}}return t}get_parent_dir_for_path(e){if(""===e)return null;let t=this,r=t;for(const n of e.split("/")){if(""===n)break;if("."!==n){if(!(t instanceof h))return a.log(t),null;if(void 0===t.contents[n])return a.log(n),null;r=t,t=t.contents[n]}}return r}create_entry_for_path(e,t){let r=this;const n=e.split("/").filter((e=>"/"!=e));for(let e=0;e<n.length;e++){const s=n[e];if(!(r instanceof h))break;null!=r.contents[s]||(a.log("create",s),e!=n.length-1||t?r.contents[s]=new h({}):r.contents[s]=new _(new ArrayBuffer(0))),r=r.contents[s]}return r}constructor(e){this.readonly=!1,this.contents=e}}class m extends f{constructor(){super()}fd_write(e,t){let r=0;for(let n of t){const t=e.slice(n.buf,n.buf+n.buf_len);self.postMessage({type:p,payload:t}),r+=n.buf_len}return{ret:0,nwritten:r}}}const p="terminal-print",g="transform-done",w="transform-error",y="wasi_snapshot_preview1",b=(e,t,r,n)=>(console.log("poll_oneoff in_, out, nsubscriptions, nevents",e,t,r,n),0),x=(e,t,r,n)=>(console.log("sock_accept sock, fd_flags, ro_fd, ro_addr",e,t,r,n),0);let U=null;console.log("worker: main start"),self.addEventListener("message",(async e=>{console.log("worker: processMessage start");try{const t=e.data;switch(console.log("worker: got a message:",t),t.type){case"wasm-module":{console.log("worker: got a wasm module:",typeof t.payload,t.payload);const{wasmModule:r,srcFilename:n,srcContents:s,custFilename:o,custContents:i}=t.payload,a=["move2kube","transform","--source",n,"--qa-skip","--output","my-m2k-output"];o&&i&&a.push("--customizations",o);const f=[],d=[new m,new m,new m,new u("/",{[n]:new _(s),[o]:new _(i)})];U=d;const c=new l(a,f,d,{debug:!1}),p=c.wasiImport;p.poll_oneoff=b,p.sock_accept=x;const k=new l(a,f,d,{debug:!1}),D=k.wasiImport;D.poll_oneoff=b,D.sock_accept=x;let B=null;const A=(e,t)=>{if(!B)throw new Error("load_string: the wasm instance is missing");const r=new Uint8Array(B.exports.memory.buffer).slice(e,e+t);return{buf:r,s:new TextDecoder("utf-8").decode(r)}},v=(e,t)=>{if(!B)throw new Error("store_bytes: the wasm instance is missing");new Uint8Array(B.exports.memory.buffer).set(e,t)};let I=41;const T={},E=(e,t)=>{const{s:r}=A(e,t),n=d[3];console.log("[DEBUG] load_wasm_module called with path:",r,"preOpenedFd:",n);let s=n.dir.contents;if(r.split("/").forEach((e=>{if(""!==e){if(!(e in s))throw console.error("load_wasm_module: p",e,"currDirectoryOrFile",s),new Error("load_wasm_module: failed to find the wasm module");s=s[e],s instanceof u?s=s.dir.contents:s instanceof h&&(s=s.contents)}})),!(s instanceof _))throw new Error("load_wasm_module: the given path is not a file");const o=s.data;console.log("load_wasm_module: wasmModuleBytes",o);const i=new WebAssembly.Module(o),a={[y]:D},l=new WebAssembly.Instance(i,a);console.log("load_wasm_module wasi.start start"),k.start(l),console.log("load_wasm_module wasi.start done");const f=++I;return console.log("load_wasm_module: compiled wasm and made an instance:",l,"module id:",f),T[f]=l,f},M=e=>(t,r,n,s)=>{if(!(t in T))throw new Error(`There is no wasm module with id ${t}`);console.log("[DEBUG] run_transform is_dir_detect:",e);const o=T[t],{buf:i,s:a}=A(r,n);console.log("run_transform: load_string buf",i),JSON.parse(a),console.log("run_transform called with: wasmModuleId:",t,"wasmModule",o),console.log("wasmModule.exports.myAllocate",o.exports.myAllocate),console.log("wasmModule.exports.RunDirectoryDetect",o.exports.RunDirectoryDetect),console.log("wasmModule.exports.RunTransform",o.exports.RunTransform);const l=i.byteLength;console.log("run_transform: allocate some memory of size:",l);const f=o.exports.myAllocate(l);if(console.log("run_transform: ptr",f,"len",l),f<0)throw new Error("failed to allocate, invalid pointer into memory");let d=new Uint8Array(o.exports.memory.buffer);d.set(i,f),console.log("run_transform: json input set at ptr",f),console.log("run_transform: allocate space for the output pointers");const c=o.exports.myAllocate(8);if(console.log("run_transform: ptrptr",c),c<0)throw new Error("failed to allocate, invalid pointer into memory");if(e){console.log("calling custom transformer directory detect");const e=o.exports.RunDirectoryDetect(f,l,c,c+4);if(console.log("run_transform: directory detect result",e),e<0)throw new Error("run_transform: directory detect failed")}else{console.log("calling custom transformer transform");const e=o.exports.RunTransform(f,l,c,c+4);if(console.log("run_transform: transformation result",e),e<0)throw new Error("run_transform: transformation failed")}const u=new DataView(o.exports.memory.buffer,c,4).getUint32(0,!0),_=new DataView(o.exports.memory.buffer,c+4,4).getUint32(0,!0);console.log("run_transform: transformation outJsonPtr",u,"outJsonLen",_),d=new Uint8Array(o.exports.memory.buffer),console.log("run_transform: memory",d);const h=d.slice(u,u+_);console.log("run_transform: outJsonBytes",h);const m=new TextDecoder("utf-8").decode(h);console.log("run_transform: outJson",m);const p=JSON.parse(m);return console.log("run_transform: outJsonParsed",p),v(h,s),h.length},V={[y]:p,mym2kmodule:{load_wasm_module:E,run_dir_detect:M(!0),run_transform:M(!1)}},z=await WebAssembly.instantiate(r,V);B=z,console.log("worker: wasmModuleInstance",z),console.log("worker: wasmModuleInstance.exports",z.exports),console.log("worker: wasmModuleInstance.exports.memory.buffer",z.exports.memory.buffer);try{c.start(z),self.postMessage({type:g,payload:"transformation result (no exit code)"})}catch(e){console.log("worker: the wasm module finished:",e);const t=`${e}`,r="exit with exit code ";if(t.startsWith(r)){console.log("error message has exit code prefix");const e=t.slice(r.length),n=parseInt(e,10);if(console.log("exitCode",n),!Number.isFinite(n)||0!==n){self.postMessage({type:w,payload:t}),console.log("ERROR non-zero exit code, DEBUG fds:",U);break}}else console.log("error message does not have exit code prefix");console.log("TODO: assuming the output file name is myproject.zip");const n=d[3]?.dir?.contents["myproject.zip"]?.data?.buffer;if(!n){self.postMessage({type:w,payload:t}),console.log("ERROR myproject.zip is missing, DEBUG fds:",U);break}self.postMessage({type:g,payload:n})}break}default:console.error("worker: unknown message type:",t)}}catch(e){console.error("worker: failed to process the message. error:",e)}console.log("worker: processMessage end")})),console.log("worker: main end")})();