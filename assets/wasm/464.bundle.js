(()=>{"use strict";class t{static read_bytes(e,r){const n=new t;return n.buf=e.getUint32(r,!0),n.buf_len=e.getUint32(r+4,!0),n}static read_bytes_array(e,r,n){const s=[];for(let i=0;i<n;i++)s.push(t.read_bytes(e,r+8*i));return s}}class e{static read_bytes(t,r){const n=new e;return n.buf=t.getUint32(r,!0),n.buf_len=t.getUint32(r+4,!0),n}static read_bytes_array(t,r,n){const s=[];for(let i=0;i<n;i++)s.push(e.read_bytes(t,r+8*i));return s}}class r{head_length(){return 24}name_length(){return this.dir_name.byteLength}write_head_bytes(t,e){t.setBigUint64(e,this.d_next,!0),t.setBigUint64(e+8,this.d_ino,!0),t.setUint32(e+16,this.dir_name.length,!0),t.setUint8(e+20,this.d_type)}write_name_bytes(t,e,r){t.set(this.dir_name.slice(0,Math.min(this.dir_name.byteLength,r)),e)}constructor(t,e,r){this.d_ino=1n;const n=(new TextEncoder).encode(e);this.d_next=t,this.d_namlen=n.byteLength,this.d_type=r,this.dir_name=n}}class n{write_bytes(t,e){t.setUint8(e,this.fs_filetype),t.setUint16(e+2,this.fs_flags,!0),t.setBigUint64(e+8,this.fs_rights_base,!0),t.setBigUint64(e+16,this.fs_rights_inherited,!0)}constructor(t,e){this.fs_rights_base=0n,this.fs_rights_inherited=0n,this.fs_filetype=t,this.fs_flags=e}}class s{write_bytes(t,e){t.setBigUint64(e,this.dev,!0),t.setBigUint64(e+8,this.ino,!0),t.setUint8(e+16,this.filetype),t.setBigUint64(e+24,this.nlink,!0),t.setBigUint64(e+32,this.size,!0),t.setBigUint64(e+38,this.atim,!0),t.setBigUint64(e+46,this.mtim,!0),t.setBigUint64(e+52,this.ctim,!0)}constructor(t,e){this.dev=0n,this.ino=0n,this.nlink=0n,this.atim=0n,this.mtim=0n,this.ctim=0n,this.filetype=t,this.size=e}}class i{write_bytes(t,e){t.setUint32(e,this.pr_name_len,!0)}constructor(t){this.pr_name_len=t}}class o{static dir(t){const e=new o;return e.tag=0,e.inner=new i(t),e}write_bytes(t,e){t.setUint32(e,this.tag,!0),this.inner.write_bytes(t,e+4)}}const f=new class{enable(t){this.log=function(t,e){return t?console.log.bind(console,"%c%s","color: #265BA0",e):()=>{}}(void 0===t||t,this.prefix)}get enabled(){return this.isEnabled}constructor(t){this.isEnabled=t,this.prefix="wasi:",this.enable(t)}}(!1);let a=class{start(t){this.inst=t,t.exports._start()}initialize(t){this.inst=t,t.exports._initialize()}constructor(r,n,s,i={}){this.args=[],this.env=[],this.fds=[],f.enable(i.debug),this.args=r,this.env=n,this.fds=s;const o=this;this.wasiImport={args_sizes_get(t,e){const r=new DataView(o.inst.exports.memory.buffer);r.setUint32(t,o.args.length,!0);let n=0;for(const t of o.args)n+=t.length+1;return r.setUint32(e,n,!0),f.log(r.getUint32(t,!0),r.getUint32(e,!0)),0},args_get(t,e){const r=new DataView(o.inst.exports.memory.buffer),n=new Uint8Array(o.inst.exports.memory.buffer),s=e;for(let s=0;s<o.args.length;s++){r.setUint32(t,e,!0),t+=4;const i=(new TextEncoder).encode(o.args[s]);n.set(i,e),r.setUint8(e+i.length,0),e+=i.length+1}return f.enabled&&f.log(new TextDecoder("utf-8").decode(n.slice(s,e))),0},environ_sizes_get(t,e){const r=new DataView(o.inst.exports.memory.buffer);r.setUint32(t,o.env.length,!0);let n=0;for(const t of o.env)n+=t.length+1;return r.setUint32(e,n,!0),f.log(r.getUint32(t,!0),r.getUint32(e,!0)),0},environ_get(t,e){const r=new DataView(o.inst.exports.memory.buffer),n=new Uint8Array(o.inst.exports.memory.buffer),s=e;for(let s=0;s<o.env.length;s++){r.setUint32(t,e,!0),t+=4;const i=(new TextEncoder).encode(o.env[s]);n.set(i,e),r.setUint8(e+i.length,0),e+=i.length+1}return f.enabled&&f.log(new TextDecoder("utf-8").decode(n.slice(s,e))),0},clock_res_get(t,e){throw"unimplemented"},clock_time_get(t,e,r){const n=new DataView(o.inst.exports.memory.buffer);if(0===t)n.setBigUint64(r,1000000n*BigInt((new Date).getTime()),!0);else if(1==t){let t;try{t=BigInt(Math.round(1e6*performance.now()))}catch(e){t=0n}n.setBigUint64(r,t,!0)}else n.setBigUint64(r,0n,!0);return 0},fd_advise:(t,e,r,n)=>null!=o.fds[t]?o.fds[t].fd_advise(e,r,n):8,fd_allocate:(t,e,r)=>null!=o.fds[t]?o.fds[t].fd_allocate(e,r):8,fd_close(t){if(null!=o.fds[t]){const e=o.fds[t].fd_close();return o.fds[t]=void 0,e}return 8},fd_datasync:t=>null!=o.fds[t]?o.fds[t].fd_datasync():8,fd_fdstat_get(t,e){if(null!=o.fds[t]){const{ret:r,fdstat:n}=o.fds[t].fd_fdstat_get();return null!=n&&n.write_bytes(new DataView(o.inst.exports.memory.buffer),e),r}return 8},fd_fdstat_set_flags:(t,e)=>null!=o.fds[t]?o.fds[t].fd_fdstat_set_flags(e):8,fd_fdstat_set_rights:(t,e,r)=>null!=o.fds[t]?o.fds[t].fd_fdstat_set_rights(e,r):8,fd_filestat_get(t,e){if(null!=o.fds[t]){const{ret:r,filestat:n}=o.fds[t].fd_filestat_get();return null!=n&&n.write_bytes(new DataView(o.inst.exports.memory.buffer),e),r}return 8},fd_filestat_set_size:(t,e)=>null!=o.fds[t]?o.fds[t].fd_filestat_set_size(e):8,fd_filestat_set_times:(t,e,r,n)=>null!=o.fds[t]?o.fds[t].fd_filestat_set_times(e,r,n):8,fd_pread(e,r,n,s,i){const f=new DataView(o.inst.exports.memory.buffer),a=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[e]){const l=t.read_bytes_array(f,r,n),{ret:d,nread:_}=o.fds[e].fd_pread(a,l,s);return f.setUint32(i,_,!0),d}return 8},fd_prestat_get(t,e){const r=new DataView(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const{ret:n,prestat:s}=o.fds[t].fd_prestat_get();return null!=s&&s.write_bytes(r,e),n}return 8},fd_prestat_dir_name(t,e,r){if(null!=o.fds[t]){const{ret:r,prestat_dir_name:n}=o.fds[t].fd_prestat_dir_name();return null!=n&&new Uint8Array(o.inst.exports.memory.buffer).set(n,e),r}return 8},fd_pwrite(t,r,n,s,i){const f=new DataView(o.inst.exports.memory.buffer),a=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const l=e.read_bytes_array(f,r,n),{ret:d,nwritten:_}=o.fds[t].fd_pwrite(a,l,s);return f.setUint32(i,_,!0),d}return 8},fd_read(e,r,n,s){const i=new DataView(o.inst.exports.memory.buffer),f=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[e]){const a=t.read_bytes_array(i,r,n),{ret:l,nread:d}=o.fds[e].fd_read(f,a);return i.setUint32(s,d,!0),l}return 8},fd_readdir(t,e,r,n,s){const i=new DataView(o.inst.exports.memory.buffer),f=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){let a=0;for(;;){const{ret:l,dirent:d}=o.fds[t].fd_readdir_single(n);if(0!=l)return i.setUint32(s,a,!0),l;if(null==d)break;if(r-a<d.head_length()){a=r;break}const _=new ArrayBuffer(d.head_length());if(d.write_head_bytes(new DataView(_),0),f.set(new Uint8Array(_).slice(0,Math.min(_.byteLength,r-a)),e),e+=d.head_length(),a+=d.head_length(),r-a<d.name_length()){a=r;break}d.write_name_bytes(f,e,r-a),e+=d.name_length(),a+=d.name_length(),n=d.d_next}return i.setUint32(s,a,!0),0}return 8},fd_renumber(t,e){if(null!=o.fds[t]&&null!=o.fds[e]){const r=o.fds[e].fd_close();return 0!=r?r:(o.fds[e]=o.fds[t],o.fds[t]=void 0,0)}return 8},fd_seek(t,e,r,n){const s=new DataView(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const{ret:i,offset:f}=o.fds[t].fd_seek(e,r);return s.setBigInt64(n,f,!0),i}return 8},fd_sync:t=>null!=o.fds[t]?o.fds[t].fd_sync():8,fd_tell(t,e){const r=new DataView(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const{ret:n,offset:s}=o.fds[t].fd_tell();return r.setBigUint64(e,s,!0),n}return 8},fd_write(t,r,n,s){const i=new DataView(o.inst.exports.memory.buffer),f=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const a=e.read_bytes_array(i,r,n),{ret:l,nwritten:d}=o.fds[t].fd_write(f,a);return i.setUint32(s,d,!0),l}return 8},path_create_directory(t,e,r){const n=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const s=new TextDecoder("utf-8").decode(n.slice(e,e+r));return o.fds[t].path_create_directory(s)}},path_filestat_get(t,e,r,n,s){const i=new DataView(o.inst.exports.memory.buffer),f=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const a=new TextDecoder("utf-8").decode(f.slice(r,r+n)),{ret:l,filestat:d}=o.fds[t].path_filestat_get(e,a);return null!=d&&d.write_bytes(i,s),l}return 8},path_filestat_set_times(t,e,r,n,s,i,f){const a=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const l=new TextDecoder("utf-8").decode(a.slice(r,r+n));return o.fds[t].path_filestat_set_times(e,l,s,i,f)}return 8},path_link(t,e,r,n,s,i,f){const a=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]&&null!=o.fds[s]){const l=new TextDecoder("utf-8").decode(a.slice(r,r+n)),d=new TextDecoder("utf-8").decode(a.slice(i,i+f));return o.fds[s].path_link(t,e,l,d)}return 8},path_open(t,e,r,n,s,i,a,l,d){const _=new DataView(o.inst.exports.memory.buffer),c=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const u=new TextDecoder("utf-8").decode(c.slice(r,r+n));f.log(u);const{ret:h,fd_obj:p}=o.fds[t].path_open(e,u,s,i,a,l);if(0!=h)return h;o.fds.push(p);const g=o.fds.length-1;return _.setUint32(d,g,!0),0}return 8},path_readlink(t,e,r,n,s,i){const a=new DataView(o.inst.exports.memory.buffer),l=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const d=new TextDecoder("utf-8").decode(l.slice(e,e+r));f.log(d);const{ret:_,data:c}=o.fds[t].path_readlink(d);if(null!=c){if(c.length>s)return a.setUint32(i,0,!0),8;l.set(c,n),a.setUint32(i,c.length,!0)}return _}return 8},path_remove_directory(t,e,r){const n=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const s=new TextDecoder("utf-8").decode(n.slice(e,e+r));return o.fds[t].path_remove_directory(s)}return 8},path_rename(t,e,r,n,s,i){throw"FIXME what is the best abstraction for this?"},path_symlink(t,e,r,n,s){const i=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[r]){const f=new TextDecoder("utf-8").decode(i.slice(t,t+e)),a=new TextDecoder("utf-8").decode(i.slice(n,n+s));return o.fds[r].path_symlink(f,a)}return 8},path_unlink_file(t,e,r){const n=new Uint8Array(o.inst.exports.memory.buffer);if(null!=o.fds[t]){const s=new TextDecoder("utf-8").decode(n.slice(e,e+r));return o.fds[t].path_unlink_file(s)}return 8},poll_oneoff(t,e,r){throw"async io not supported"},proc_exit(t){throw"exit with exit code "+t},proc_raise(t){throw"raised signal "+t},sched_yield(){},random_get(t,e){const r=new Uint8Array(o.inst.exports.memory.buffer);for(let n=0;n<e;n++)r[t+n]=256*Math.random()|0},sock_recv(t,e,r){throw"sockets not supported"},sock_send(t,e,r){throw"sockets not supported"},sock_shutdown(t,e){throw"sockets not supported"},sock_accept(t,e){throw"sockets not supported"}}}};class l{fd_advise(t,e,r){return-1}fd_allocate(t,e){return-1}fd_close(){return 0}fd_datasync(){return-1}fd_fdstat_get(){return{ret:-1,fdstat:null}}fd_fdstat_set_flags(t){return-1}fd_fdstat_set_rights(t,e){return-1}fd_filestat_get(){return{ret:-1,filestat:null}}fd_filestat_set_size(t){return-1}fd_filestat_set_times(t,e,r){return-1}fd_pread(t,e,r){return{ret:-1,nread:0}}fd_prestat_get(){return{ret:-1,prestat:null}}fd_prestat_dir_name(){return{ret:-1,prestat_dir_name:null}}fd_pwrite(t,e,r){return{ret:-1,nwritten:0}}fd_read(t,e){return{ret:-1,nread:0}}fd_readdir_single(t){return{ret:-1,dirent:null}}fd_seek(t,e){return{ret:-1,offset:0n}}fd_sync(){return 0}fd_tell(){return{ret:-1,offset:0n}}fd_write(t,e){return{ret:-1,nwritten:0}}path_create_directory(t){return-1}path_filestat_get(t,e){return{ret:-1,filestat:null}}path_filestat_set_times(t,e,r,n,s){return-1}path_link(t,e,r,n){return-1}path_open(t,e,r,n,s,i){return{ret:-1,fd_obj:null}}path_readlink(t){return{ret:-1,data:null}}path_remove_directory(t){return-1}path_rename(t,e,r){return-1}path_symlink(t,e){return-1}path_unlink_file(t){return-1}}class d extends l{fd_fdstat_get(){return{ret:0,fdstat:new n(4,0)}}fd_read(t,e){let r=0;for(const n of e){if(!(this.file_pos<this.file.data.byteLength))break;{const e=this.file.data.slice(Number(this.file_pos),Number(this.file_pos+BigInt(n.buf_len)));t.set(e,n.buf),this.file_pos+=BigInt(e.length),r+=e.length}}return{ret:0,nread:r}}fd_pread(t,e,r){let n=0;for(const s of e){if(!(r<this.file.data.byteLength))break;{const e=this.file.data.slice(Number(r),Number(r+BigInt(s.buf_len)));t.set(e,s.buf),r+=BigInt(e.length),n+=e.length}}return{ret:0,nread:n}}fd_seek(t,e){let r;switch(e){case 0:r=t;break;case 1:r=this.file_pos+t;break;case 2:r=BigInt(this.file.data.byteLength)+t;break;default:return{ret:28,offset:0n}}return r<0?{ret:28,offset:0n}:(this.file_pos=r,{ret:0,offset:this.file_pos})}fd_write(t,e){let r=0;if(this.file.readonly)return{ret:8,nwritten:r};for(const n of e){const e=t.slice(n.buf,n.buf+n.buf_len);if(this.file_pos+BigInt(e.byteLength)>this.file.size){const t=this.file.data;this.file.data=new Uint8Array(Number(this.file_pos+BigInt(e.byteLength))),this.file.data.set(t)}this.file.data.set(e.slice(0,Number(this.file.size-this.file_pos)),Number(this.file_pos)),this.file_pos+=BigInt(e.byteLength),r+=n.buf_len}return{ret:0,nwritten:r}}fd_filestat_get(){return{ret:0,filestat:this.file.stat()}}constructor(t){super(),this.file_pos=0n,this.file=t}}class _ extends l{fd_fdstat_get(){return{ret:0,fdstat:new n(3,0)}}fd_readdir_single(t){if(f.enabled&&(f.log("readdir_single",t),f.log(t,Object.keys(this.dir.contents))),f.log(t,Object.keys(this.dir.contents).slice(Number(t))),t>=BigInt(Object.keys(this.dir.contents).length))return{ret:0,dirent:null};const e=Object.keys(this.dir.contents)[Number(t)],n=this.dir.contents[e];return{ret:0,dirent:new r(t+1n,e,n.stat().filetype)}}path_filestat_get(t,e){const r=this.dir.get_entry_for_path(e);return null==r?{ret:44,filestat:null}:{ret:0,filestat:r.stat()}}path_open(t,e,r,n,s,i){let o=this.dir.get_entry_for_path(e);if(null==o){if(1!=(1&r))return{ret:44,fd_obj:null};o=this.dir.create_entry_for_path(e,2==(2&r))}else if(4==(4&r))return{ret:20,fd_obj:null};if(2==(2&r)&&3!==o.stat().filetype)return{ret:54,fd_obj:null};if(o.readonly&&(n&BigInt(64))==BigInt(64))return{ret:63,fd_obj:null};if(!(o instanceof h)&&8==(8&r)){const t=o.truncate();if(0!=t)return{ret:t,fd_obj:null}}return{ret:0,fd_obj:o.open(i)}}path_create_directory(t){return this.path_open(0,t,3,0n,0n,0).ret}path_unlink_file(t){t=this.clean_path(t);const e=this.dir.get_parent_dir_for_path(t),r=t.split("/"),n=r[r.length-1],s=this.dir.get_entry_for_path(t);return null===s?44:3===s.stat().filetype?31:(delete e.contents[n],0)}path_remove_directory(t){t=this.clean_path(t);const e=this.dir.get_parent_dir_for_path(t),r=t.split("/"),n=r[r.length-1],s=this.dir.get_entry_for_path(t);return null===s?44:s instanceof h&&3===s.stat().filetype?0!==Object.keys(s.contents).length?55:void 0===e.contents[n]?44:(delete e.contents[n],0):54}clean_path(t){for(;t.length>0&&"/"===t[t.length-1];)t=t.slice(0,t.length-1);return t}constructor(t){super(),this.dir=t}}class c extends _{fd_prestat_get(){return{ret:0,prestat:o.dir(this.prestat_name.length)}}fd_prestat_dir_name(){return{ret:0,prestat_dir_name:this.prestat_name}}constructor(t,e){super(new h(e)),this.prestat_name=(new TextEncoder).encode(t)}}class u{open(t){const e=new d(this);return 1&t&&e.fd_seek(0n,2),e}get size(){return BigInt(this.data.byteLength)}stat(){return new s(4,this.size)}truncate(){return this.readonly?63:(this.data=new Uint8Array([]),0)}constructor(t,e){this.data=new Uint8Array(t),this.readonly=!!e?.readonly}}class h{open(t){return new _(this)}stat(){return new s(3,0n)}get_entry_for_path(t){let e=this;for(const r of t.split("/")){if(""==r)break;if("."!=r){if(!(e instanceof h))return null;if(null==e.contents[r])return f.log(r),null;e=e.contents[r]}}return e}get_parent_dir_for_path(t){if(""===t)return null;let e=this,r=e;for(const n of t.split("/")){if(""===n)break;if("."!==n){if(!(e instanceof h))return f.log(e),null;if(void 0===e.contents[n])return f.log(n),null;r=e,e=e.contents[n]}}return r}create_entry_for_path(t,e){let r=this;const n=t.split("/").filter((t=>"/"!=t));for(let t=0;t<n.length;t++){const s=n[t];if(!(r instanceof h))break;null!=r.contents[s]||(f.log("create",s),t!=n.length-1||e?r.contents[s]=new h({}):r.contents[s]=new u(new ArrayBuffer(0))),r=r.contents[s]}return r}constructor(t){this.readonly=!1,this.contents=t}}class p extends l{constructor(){super()}fd_write(t,e){let r=0;for(let n of e){const e=t.slice(n.buf,n.buf+n.buf_len);self.postMessage({type:g,payload:e}),r+=n.buf_len}return{ret:0,nwritten:r}}}const g="terminal-print",w="transform-done",m=(t,e,r,n)=>(console.log("poll_oneoff in_, out, nsubscriptions, nevents",t,e,r,n),0),y=(t,e,r,n)=>(console.log("sock_accept sock, fd_flags, ro_fd, ro_addr",t,e,r,n),0);console.log("worker: main start"),self.addEventListener("message",(async t=>{console.log("worker: processMessage start");try{const e=t.data;switch(console.log("worker: got a message:",e),e.type){case"wasm-module":{console.log("worker: got a wasm module:",typeof e.payload,e.payload);const{wasmModule:r,filename:n,fileContentsArr:s}=e.payload,i=new TextEncoder,o=["move2kube","transform","-s",n,"--qa-skip"],f=[],l=[new p,new p,new p,new c("/",{"example.c":new u(i.encode('#include "a"')),"hello.rs":new u(i.encode('fn main() { println!("Hello World!"); }')),"dep.json":new u(i.encode('{"a": 42, "b": 12}')),[n]:new u(s)})],d=new a(o,f,l,{debug:!1}),_={wasi_snapshot_preview1:d.wasiImport};_.wasi_snapshot_preview1.poll_oneoff=m,_.wasi_snapshot_preview1.sock_accept=y,console.log("worker: importObject.wasi_snapshot_preview1",_.wasi_snapshot_preview1);const h=await WebAssembly.instantiate(r,_);console.log("worker: wasmModuleInstance",h),console.log("worker: wasmModuleInstance.exports",h.exports),console.log("worker: wasmModuleInstance.exports.memory.buffer",h.exports.memory.buffer);try{d.start(h),self.postMessage({type:w,payload:"transformation result (no exit code)"})}catch(t){console.log("worker: the wasm module finished with exit code:",t);const e=l[3].dir.contents["myproject.zip"].data.buffer;self.postMessage({type:w,payload:e})}break}default:console.error("worker: unknown message type:",e)}}catch(t){console.error("worker: failed to process the message. error:",t)}console.log("worker: processMessage end")})),console.log("worker: main end")})();